version: "3.9"

services:
  next:
    image: my-next:0.0.0
    environment:
      NODE_ENV: production
    build:
      context: ./../../src/next
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - 3000:3000
      - 80:3000
    depends_on:
      - strapi

  strapi:
    image: strapi/strapi:3.4.0-node14-alpine
    environment:
      NODE_ENV: production
    restart: unless-stopped
    networks:
      - app-network
      - core-network
      - updater-network
    volumes:
      - ./../../src/strapi:/srv/app
    ports:
      - 1337:1337
    depends_on:
      - strapidb

  strapidb:
    image: mongo:4.4.2
    restart: unless-stopped
    env_file: ./../../src/strapi/.db.env
    networks:
      - core-network
    volumes:
      - strapidb-volume:/data/db

  updater:
    image: my-updater:0.0.0
    env_file:
      - ./../../src/updater/app/.env
    build:
      context: ./../../src/updater
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - updater-network
    ports:
      - 1338:1338
    depends_on:
      - strapi
      - strapidb
      - grafanadb

  grafana:
    image: grafana/grafana:7.3.5
    restart: unless-stopped
    networks:
      - monitoring-network
    volumes:
      - grafana-volume:/var/lib/grafana
      - ./../../src/grafana/conf/custom.ini:/etc/grafana/custom.ini
    ports:
      - 3001:3001
    depends_on:
      - grafanadb

  grafanadb:
    image: influxdb:1.8.3
    restart: unless-stopped
    env_file: ./../../src/grafana/.db.env
    networks:
      - monitoring-network
      - updater-network
    volumes:
      - grafanadb-volume:/var/lib/influxdb

networks:
  app-network:
  core-network:
  updater-network:
  monitoring-network:

volumes:
  strapidb-volume:
  grafana-volume:
  grafanadb-volume:
